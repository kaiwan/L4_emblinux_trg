#!/bin/bash
# Kaiwan NB, kaiwanTECH
name=$(basename $0)
PFX=$(dirname "$(which "$0")")    # dir in which the common code and tools reside
source "${PFX}"/common || {
  echo "${name}: could not source 'common' script, aborting..." ; exit 1
}
setup_env -q

show_some_bb_vars()
{
# All vars (?) : https://docs.yoctoproject.org/current/genindex.html
# is case-sensitive

echo "--- Some bitbake variables ---"
VARS2GET="\
		ARCH CROSS_COMPILE \
		BBFILES BUILDDIR \
		CC CFLAGS CONFFILES CORE_IMAGE_EXTRA_INSTALL \
		DISTRO DISTRO_NAME DISTROOVERRIDES \
		EXTRA_IMAGE_FEATURES EXTRA_OEMAKE EXTRA_USERS_PARAMS \
		FILES \
		IMAGE_BASENAME IMAGE_FEATURES IMAGE_FSTYPES IMAGE_ROOTFS IMAGE_ROOTFS_EXTRA_SPACE \
		 IMAGE_ROOTFS_SIZE INHIBIT_PACKAGE_DEBUG_SPLIT INHIBIT_PACKAGE_STRIP INITRAMFS_IMAGE \
		 INITSCRIPT_NAME \
		KERNEL_FEATURES KERNEL_VERSION KARCH KBRANCH KBUILD_DEFCONFIG \
		WORKDIR \
		"
	#TODO- more to fill in

for VAR in ${VARS2GET}
do
	echo -n "${VAR}: "
	bitbake-getvar ${VAR} 2>/dev/null | tail -n1
	echo
done
}


#--- 'main'

[ $# -ne 1 ] && {
	echo "Usage: ${name} recipe-name  (without the meta- prefix)
Tip: use
	bitbake-layers show-recipes
	bitbake-layers show-appends
to get recipe names"
	exit 1
}

show_some_bb_vars
echo "--------------------------------------------------------
"

RECIPE="$1"

echo "bitbake -c listtasks ${RECIPE}"
bitbake -c listtasks ${RECIPE} #2>/dev/null
[[ $? -ne 0 ]] && failit "couldn't list tasks for recipe"

echo "
----------------------------------------------------------------------
For recipe $1: WORKDIR/temp/run.do_compile : showing varaibles therein
----------------------------------------------------------------------
"
W1=$(bitbake -e ${RECIPE} 2>/dev/null |grep -w "^WORKDIR" | awk -F'=' '{print $2}' |cut -d"\"" -f2)
[ -z "${W1}" ] && failit "Couldn't get WORKDIR for recipe \"${RECIPE}\""

#cat ${WORKDIR}/temp/run.do_compile
# See all vars for this recipe
echo "--------------------------------------------------------
"
[ -f ${W1}/temp/run.do_listtasks ] && grep "^export" ${W1}/temp/run.do_listtasks |cut -d' ' -f2-

